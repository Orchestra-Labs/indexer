services:
  indexer:
    restart: "unless-stopped"
    stop_grace_period: 30s
    build:
      context: .
      target: runtime_with_migration
    ports:
      - 5001:5001/tcp
    environment:
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_DB=${POSTGRES_DB}
        - POSTGRES_HOST=${POSTGRES_HOST}
        - DATABASE_URL=${DATABASE_URL}
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - postgres
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5001/healthz" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      default:
        aliases:
          - symphony-indexer

  postgres:
    restart: "unless-stopped"
    image: postgres:15-alpine
    stop_grace_period: 1m
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - 5432:5432/tcp
    healthcheck:
      test: [ "CMD", "nc", "-z", "-v", "localhost", "5432" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      default:
        aliases:
          - symphony-indexer
volumes:
  postgres: